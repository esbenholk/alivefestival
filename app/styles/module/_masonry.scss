//
// Masonry
// Fluid widths are hard and it is easiter not to use Susy here.
//


// Small version
$small-columns: 2;
$small-gutter: 2%;
$small-from: 400px;

// Medium version
$medium-columns: 4;
$medium-gutter: 2%;
$medium-from: 1200px;

// Large version
$large-columns: 6;
$large-gutter: 2%;
$large-from: 1650px;




// Mixin to calculate the width
@mixin calcWidth($columns, $gutter: $gutter) {
	width: (100% - ($gutter * ($columns - 1))) / $columns;
}

.grid-sizer {
	//@include calcWidth($small-columns, $small-gutter);
	
	//width: columns(1,4);
	//margin-right: gutter();
	width: columns(1,2);

	//@media (min-width: em($small-from)) {
		//@include nth-omega(4n);
	//}
	@media (min-width: em($medium-from)) {
		//@include calcWidth($medium-columns, $medium-gutter);
		width: columns(1,4);
	}
	@media (min-width: em($large-from)) {
		//@include calcWidth($large-columns, $large-gutter);
		width: columns(1,5) - 0.5;
	}
}
.gutter-sizer {
	width: gutter();
}
/*
.grid-sizer--double {
	@media (min-width: em($small-from)) {
		@include calcWidth($small-columns, $small-gutter);
	}
	@media (min-width: em($medium-from)) {
		@include calcWidth($medium-columns, $medium-gutter);
	}
	@media (min-width: em($large-from)) {
		@include calcWidth($large-columns, $large-gutter);
	}
}
*/




.js-masonry {
	@include pie-clearfix;
	background-color: teal;
}
// Apply the grid-sizer to the item in the grid.
// The .Article selector is just an example.
.Article {
	@extend .grid-sizer;
	float: left;
	img {
		max-width: 100%;
	}
}
